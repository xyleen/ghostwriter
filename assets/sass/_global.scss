$primary: #e5b743;
$secondary: #303030;
$background: #FEFEFE;

$basic-sans: "Open Sans", arial, sans-serif;
$alt-sans: 'Dosis', sans-serif;

$site-width: 1200px;
$post-width: 900px;

$font-main-size: 18px;


%center-block {
    display: block;
    margin-left: auto;
    margin-right: auto;
}

%clearfix {
    &:after {
        content: "";
        display: table;
        clear: both;
    }
}

// @include absolute(top 0 left 1em);
// @include fixed(top 1em left "WAT? A STRING?!" right 10% bottom)
@mixin position($position, $args) {
    @each $o in top right bottom left {
        $i: index($args, $o);

        @if $i and $i + 1 <= length($args) and type-of(nth($args, $i + 1)) == number  {
            #{$o}: nth($args, $i + 1);
        }
    }

    position: $position;
}

@mixin absolute($args) {
    @include position(absolute, $args);
}

@mixin fixed($args) {
    @include position(fixed, $args);
}

@mixin relative($args) {
    @include position(relative, $args);
}

@mixin tint($color) {
    &::after {
        display: block;
        content: "";
        @include absolute(left 0 top 0 right 0 bottom 0);
        background: $color;
    }
}

$breakpoints: (
  'x-small': (max-width: 500px),
  'small'  : (max-width:  767px),
  's-medium': (max-width: 900px),
  'medium' : (max-width:  992px),
  'x-medium': (max-width:  1100px),
  'large'  : (max-width: 1400px),
);

@mixin respond-to($name) {
  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}
